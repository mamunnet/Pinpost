# Multi-stage build for optimized production frontend

# Stage 1: Build
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY frontend/package.json ./
COPY frontend/yarn.lock ./

# Install dependencies with retry logic
RUN yarn install --frozen-lockfile --network-timeout 100000 || \
    (sleep 5 && yarn install --frozen-lockfile --network-timeout 100000)

# Copy frontend source
COPY frontend/ .

# Set backend URL to empty string - nginx will proxy all API calls
ENV REACT_APP_BACKEND_URL=""

# Build the app
RUN yarn build

# Stage 2: Production
FROM nginx:alpine

# Copy custom nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built files from builder stage
COPY --from=builder /app/build /usr/share/nginx/html

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --quiet --tries=1 --spider http://localhost:80/ || exit 1

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
